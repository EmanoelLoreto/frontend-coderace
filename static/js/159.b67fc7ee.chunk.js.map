{"version":3,"file":"static/js/159.b67fc7ee.chunk.js","mappings":"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","sources":["containers/SponsorContainer/SponsorContainer.styles.js","containers/SponsorContainer/SponsorContainer.js","screens/SponsorScreen/SponsorScreen.js"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background: #fff;\r\n  padding: 0px 5vw;\r\n  margin-top: 7vw;\r\n\r\n  @media(max-width: 950px) {\r\n    margin-top: 20vw;\r\n  }\r\n`\r\n\r\nexport const TitleSponsor = styled.h1`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const DescriptionSponsor = styled.span`\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: #9195a2;\r\n`\r\n\r\nexport const HrVerde = styled.hr`\r\n  width: 10vw;\r\n  border: none;\r\n  width: 10vw;\r\n  border-bottom: 4px solid #00B83B;\r\n`\r\n\r\nexport const ContainerSponsor = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-flow: wrap;\r\n\r\n  span {\r\n    margin-top: 50px;\r\n    text-align: justify;\r\n  }\r\n\r\n  h3 {\r\n    margin-top: 30px;\r\n  }\r\n`\r\n\r\nexport const ContainerFormContact = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(6, 1fr);\r\n  grid-column-gap: 0px;\r\n  grid-row-gap: 0px;\r\n  width: 60vw;\r\n  margin: 10px 0 2vw;\r\n\r\n  @media(max-width: 950px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nexport const InputContact = styled.input`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  flex: 1;\r\n  margin: 10px;\r\n  padding: 10px 14px;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n\r\n  :focus {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #80bdff;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport const InputMessage = styled.textarea`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  flex: 1;\r\n  margin: 10px;\r\n  padding: 10px 14px;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n  resize: none;\r\n  width: auto;\r\n\r\n  :focus {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #80bdff;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    flex: auto;\r\n    width: 80%;\r\n    height: 100px;\r\n  }\r\n`\r\n\r\nexport const inputNome = {\r\n  gridArea: '1 / 1 / 2 / 3',\r\n}\r\n\r\nexport const inputResponsavel = {\r\n  gridArea: '1 / 3 / 2 / 5',\r\n}\r\n\r\nexport const inputTelefone = {\r\n  gridArea: '2 / 1 / 3 / 3',\r\n}\r\n\r\nexport const inputEmail = {\r\n  gridArea: '2 / 3 / 3 / 5',\r\n}\r\n\r\nexport const inputAssunto = {\r\n  gridArea: '3 / 1 / 4 / 5',\r\n}\r\n\r\nexport const inputMensagem = {\r\n  gridArea: '4 / 1 / 6 / 5',\r\n}\r\n\r\nexport const ButtonSendContact = styled.button`\r\n  grid-area: 6 / 2 / 7 / 4;\r\n  background: #00B83B;\r\n  padding: 10px 40px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  border: 1px solid transparent;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 50px;\r\n  justify-self: center;\r\n  transition: background .15s ease-in-out, box-shadow .15s ease-in-out;\r\n  height: 3.5vw;\r\n  margin-top: 5px;\r\n\r\n  :hover {\r\n    background: #54a3ff;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    height: auto;\r\n    margin-bottom: 15px;\r\n  }\r\n`\r\n","import React, { useCallback, useState } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { useToastAlert } from '../../utils'\r\n\r\nimport Header from '../../components/Header/Header'\r\nimport SectionFooter from '../../components/SectionFooter/SectionFooter'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nimport {\r\n  Container,\r\n  DescriptionSponsor,\r\n  HrVerde,\r\n  Section,\r\n  TitleSponsor,\r\n  ContainerSponsor,\r\n  ContainerFormContact,\r\n  InputContact,\r\n  inputNome,\r\n  inputEmail,\r\n  inputAssunto,\r\n  inputMensagem,\r\n  InputMessage,\r\n  ButtonSendContact,\r\n  inputResponsavel,\r\n  inputTelefone,\r\n} from './SponsorContainer.styles'\r\n\r\nconst SponsorContainer = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL\r\n  const { ToastAlert, ToastUpdate } = useToastAlert()\r\n\r\n  const storageData = localStorage.getItem('authToken')\r\n\r\n  const [canSendContact, setCanSendContact] = useState(true)\r\n  const [form, setForm] = useState({\r\n    nomeEmpresa: '',\r\n    responsavel: '',\r\n    telefone: '',\r\n    email: '',\r\n    assunto: '',\r\n    mensagem: ''\r\n  })\r\n\r\n  const sendSponsor = useCallback(\r\n    (event) => {\r\n      event.preventDefault()\r\n\r\n      if (canSendContact) {\r\n        setCanSendContact(false)\r\n\r\n        ToastAlert({\r\n          id: 'sponsor',\r\n          message: 'Enviando contato...',\r\n          type: 'info',\r\n        })\r\n\r\n        axios\r\n          .post(`${ apiUrl }/patrocinio`, {\r\n            sponsor: form\r\n          }, {\r\n            headers: {\r\n              Authorization: storageData,\r\n            }\r\n          })\r\n          .then(() => {\r\n            ToastUpdate({\r\n              id: 'sponsor',\r\n              message: 'Contato enviado com sucesso!',\r\n              type: 'success',\r\n              autoClose: 6000,\r\n            })\r\n\r\n            setForm({\r\n              nomeEmpresa: '',\r\n              responsavel: '',\r\n              telefone: '',\r\n              email: '',\r\n              assunto: '',\r\n              mensagem: ''\r\n            })\r\n\r\n            setTimeout(() => {\r\n              setCanSendContact(true)\r\n            }, 120000)\r\n          })\r\n          .catch((error) => {\r\n            setCanSendContact(true)\r\n            ToastUpdate({\r\n              id: 'sponsor',\r\n              message: 'Erro ao enviar o contato, contate um adminstrador.',\r\n              type: 'error',\r\n              autoClose: 6000,\r\n            })\r\n\r\n            ToastAlert({\r\n              message: error?.response?.data?.error?.message ?? 'Erro 404',\r\n              type: 'error',\r\n              autoClose: 6000,\r\n            })\r\n          })\r\n      } else {\r\n        ToastAlert({\r\n          message: 'Você deve esperar 2 minutos para enviar outra mensagem.',\r\n          type: 'info',\r\n          autoClose: 6000,\r\n        })\r\n      }\r\n    },\r\n    [form, canSendContact],\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Header transparent={ false } />\r\n\r\n      <Section>\r\n        <TitleSponsor>Organização</TitleSponsor>\r\n        <DescriptionSponsor>\r\n          Code Race e você, uma parceria de Sucesso!\r\n        </DescriptionSponsor>\r\n\r\n        <HrVerde />\r\n\r\n        <ContainerSponsor>\r\n          <span>\r\n            Somos um campeonato de programação que acontece anualmente na\r\n            Antonio Meneghetti Faculdade - AMF, este ano chegamos a nossa VI\r\n            edição. Sempre carregando o objetivo de <b>gerar uma interação entre\r\n              profissionais da área da tecnologia e, através desta, dar maior\r\n              visibilidade aos mesmos no mundo da TI</b>. Participam do evento desde\r\n            estudantes até grandes profissionais do mercado de TI, todos com\r\n            vontade de aprender mais e desenvolver-se na área.\r\n          </span>\r\n          <span>\r\n            O Code Race acontece em três grandes momentos, abertura onde será\r\n            realizado com a presença de um grande palestrante, desenvolvimento\r\n            momento em que os participantes pensam e desenvolvem sua aplicação e\r\n            por fim o grande encerramento com resultado e a entrega da premiação\r\n            para o campeão. Gostaríamos que você e sua empresa fizessem parte\r\n            deste grande evento, para isso disponibilizamos o&nbsp;\r\n            <b>material de patrocínios que pode ser acessado através deste</b> link.\r\n          </span>\r\n\r\n          <h3>Preencha o formulário abaixo para entraremos em contato!</h3>\r\n\r\n          <ContainerFormContact onSubmit={ sendSponsor }>\r\n            <InputContact\r\n              id=\"nomeEmpresa\"\r\n              type=\"text\"\r\n              placeholder=\"Nome da empresa\"\r\n              required\r\n              style={ inputNome }\r\n              value={ form.nomeEmpresa }\r\n              onChange={ (e) => setForm({ ...form, nomeEmpresa: e.target.value }) }\r\n            />\r\n            <InputContact\r\n              id=\"responsavel\"\r\n              type=\"text\"\r\n              placeholder=\"Responsável\"\r\n              required\r\n              style={ inputResponsavel }\r\n              value={ form.responsavel }\r\n              onChange={ (e) => setForm({ ...form, responsavel: e.target.value }) }\r\n            />\r\n            <InputContact\r\n              id=\"telefone\"\r\n              type=\"text\"\r\n              placeholder=\"Telefone\"\r\n              required\r\n              style={ inputTelefone }\r\n              value={ form.telefone }\r\n              onChange={ (e) => setForm({ ...form, telefone: e.target.value }) }\r\n            />\r\n            <InputContact\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              style={ inputEmail }\r\n              value={ form.email }\r\n              onChange={ (e) => setForm({ ...form, email: e.target.value }) }\r\n            />\r\n            <InputContact\r\n              id=\"assunto\"\r\n              type=\"text\"\r\n              placeholder=\"Assunto\"\r\n              required\r\n              style={ inputAssunto }\r\n              value={ form.assunto }\r\n              onChange={ (e) => setForm({ ...form, assunto: e.target.value }) }\r\n            />\r\n            <InputMessage\r\n              id=\"mensagem\"\r\n              type=\"textarea\"\r\n              placeholder=\"Mensagem\"\r\n              required\r\n              style={ inputMensagem }\r\n              value={ form.mensagem }\r\n              onChange={ (e) => setForm({ ...form, mensagem: e.target.value }) }\r\n            />\r\n            <ButtonSendContact type=\"submit\">Enviar mensagem</ButtonSendContact>\r\n          </ContainerFormContact>\r\n        </ContainerSponsor>\r\n      </Section>\r\n\r\n      <SectionFooter />\r\n\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SponsorContainer\r\n","import React from 'react'\r\nimport SponsorContainer from '../../containers/SponsorContainer/SponsorContainer'\r\n\r\nconst SponsorScreen = props => <SponsorContainer { ...props } />\r\n\r\nexport default SponsorScreen\r\n"],"names":["Container","styled","Section","TitleSponsor","DescriptionSponsor","HrVerde","ContainerSponsor","ContainerFormContact","InputContact","InputMessage","inputNome","gridArea","inputResponsavel","inputTelefone","inputEmail","inputAssunto","inputMensagem","ButtonSendContact","useToastAlert","ToastAlert","ToastUpdate","storageData","localStorage","getItem","useState","canSendContact","setCanSendContact","nomeEmpresa","responsavel","telefone","email","assunto","mensagem","form","setForm","sendSponsor","useCallback","event","preventDefault","id","message","type","axios","process","sponsor","headers","Authorization","then","autoClose","setTimeout","catch","error","response","data","Header","transparent","onSubmit","placeholder","required","style","value","onChange","e","target","SectionFooter","Footer","props"],"sourceRoot":""}