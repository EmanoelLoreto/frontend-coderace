{"version":3,"file":"static/js/502.8e5876d7.chunk.js","mappings":"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","sources":["components/SectionAward/SectionAward.styles.js","components/SectionAward/SectionAward.js","components/SectionContact/SectionContact.styles.js","components/SectionContact/SectionContact.js","components/Dropdown/Dropdown.styles.js","components/Dropdown/Dropdown.js","components/SectionFAQ/SectionFAQ.styles.js","components/SectionFAQ/SectionFAQ.js"],"sourcesContent":["/* eslint-disable global-require */\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background: #fff;\r\n  padding: 0px 5vw;\r\n`\r\n\r\nconst pulseAnimation = keyframes`\r\n  0% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n  50% {\r\n    -webkit-transform: scale(0.9);\r\n            transform: scale(0.9);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n`\r\n\r\nexport const CardAward = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 1vw;\r\n  margin: 3vw;\r\n  \r\n  border-radius: 50px;\r\n  background: #f7f7f7;\r\n  box-shadow:  20px 20px 60px #d2d2d2,\r\n              -20px -20px 60px #ffffff;\r\n\r\n  img {\r\n    animation: ${ pulseAnimation } 3s ease-in-out infinite both;\r\n  }\r\n`\r\n\r\nexport const TitleAward = styled.h1`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const DescriptionAward = styled.span`\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: #9195a2;\r\n`\r\n\r\nexport const HrCard = styled.hr`\r\n  width: 100%;\r\n  border: 0;\r\n  border-top: 1px solid rgba(0,0,0,.1);\r\n`\r\n\r\nexport const FirstPlaceAward = styled.b`\r\n  color: #6c757d;\r\n  margin: 10px 0;\r\n  font-size: 1rem;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  opacity: 0.7;\r\n`\r\n\r\nexport const MoneyPrize = styled.h2`\r\n  font-size: 2.4rem;\r\n  text-align: center;\r\n  margin: 0 0 5px 0;\r\n`\r\n\r\nexport const CardSubscription = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 2vw;\r\n  margin: 3vw;\r\n\r\n  border-radius: 50px;\r\n  background: #f7f7f7;\r\n  box-shadow:  20px 20px 60px #d2d2d2,\r\n              -20px -20px 60px #ffffff;\r\n`\r\n\r\nexport const TitleSubscription = styled.h1`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 2.6rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-weight: 400;\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const UlRules = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  list-style: none;\r\n  padding: 0 4vw;\r\n\r\n  @media(max-width: 950px) {\r\n    padding: 0 7vw;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const LiRules = styled.li`\r\n  margin: 8px 0;\r\n  font-size: 1rem;\r\n\r\n  :before {\r\n    font-family: FontAwesome;\r\n    float: left;\r\n    margin-left: -1.5em;\r\n    content: \"\\f00c\";\r\n    color: #d91f26;\r\n    transform: scale(1, 1);\r\n    position: absolute;\r\n    margin-top: -1px;\r\n    color: #00B83B;\r\n  }\r\n`\r\n\r\nexport const HrVerde = styled.hr`\r\n  width: 10vw;\r\n  border: none;\r\n  width: 10vw;\r\n  border-bottom: 4px solid #00B83B;\r\n`\r\n\r\nexport const GreenSpan = styled.span`\r\n  color: #00B83B;\r\n`\r\n","import React from 'react'\r\n\r\nimport {\r\n  Section,\r\n  CardAward,\r\n  TitleAward,\r\n  DescriptionAward,\r\n  MoneyPrize,\r\n  FirstPlaceAward,\r\n  CardSubscription,\r\n  TitleSubscription,\r\n  UlRules,\r\n  LiRules,\r\n  HrCard,\r\n  HrVerde,\r\n  GreenSpan,\r\n} from './SectionAward.styles'\r\n\r\nimport primeiroLugar from '../../assets/primeiro-lugar.png'\r\n\r\nconst SectionAward = () => (\r\n  <Section data-aos=\"fade-up\">\r\n    <TitleAward>Premiações</TitleAward>\r\n    <DescriptionAward>\r\n      Premiações para VII edição do Code Race\r\n    </DescriptionAward>\r\n\r\n    <HrVerde />\r\n\r\n    <CardAward>\r\n      <img\r\n        id=\"primeiro-lugar\"\r\n        src={ primeiroLugar }\r\n        alt=\"Icon\"\r\n        height=\"90%\"\r\n        width=\"70%\"\r\n      />\r\n\r\n      <HrCard />\r\n\r\n      <FirstPlaceAward>1º LUGAR</FirstPlaceAward>\r\n      <MoneyPrize>R$ 4.000,00</MoneyPrize>\r\n    </CardAward>\r\n\r\n    <TitleAward>Inscrições abertas</TitleAward>\r\n    <DescriptionAward>\r\n      Confira o <GreenSpan>regulamento</GreenSpan> do Code Race\r\n    </DescriptionAward>\r\n\r\n    <HrVerde />\r\n\r\n    <CardSubscription>\r\n      <DescriptionAward>INSCRIÇÃO</DescriptionAward>\r\n      <TitleSubscription>GRATUITA</TitleSubscription>\r\n\r\n      <HrCard />\r\n\r\n      <UlRules>\r\n        <LiRules>Prazo da Inscrição: a definir</LiRules>\r\n        <LiRules>Formato da Equipe: individual ou dupla</LiRules>\r\n        <LiRules>\r\n          Não será permitida a inscrição de uma mesma pessoa em mais de uma\r\n          equipe\r\n        </LiRules>\r\n      </UlRules>\r\n    </CardSubscription>\r\n  </Section>\r\n)\r\n\r\nexport default SectionAward\r\n","import styled from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  padding: 0px 5vw;\r\n  scroll-margin-top: 70px;\r\n`\r\n\r\nexport const TitleContact = styled.h1`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const DescriptionContact = styled.span`\r\n  text-align: center;\r\n  margin: 0 0 15px 0;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: #9195a2;\r\n`\r\n\r\nexport const ContainerFormContact = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  grid-column-gap: 0px;\r\n  grid-row-gap: 0px;\r\n  width: 60vw;\r\n  margin: 10px 0 2vw;\r\n\r\n  @media(max-width: 950px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const InputContact = styled.input`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  flex: 1;\r\n  margin: 10px;\r\n  padding: 10px 14px;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n\r\n  :focus {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #80bdff;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport const InputMessage = styled.textarea`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  flex: 1;\r\n  margin: 10px;\r\n  padding: 10px 14px;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n  resize: none;\r\n  width: auto;\r\n\r\n  :focus {\r\n    color: #495057;\r\n    background-color: #fff;\r\n    border-color: #80bdff;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport const inputNome = {\r\n  gridArea: '1 / 1 / 2 / 2',\r\n}\r\n\r\nexport const inputEmail = {\r\n  gridArea: '1 / 2 / 2 / 3',\r\n}\r\n\r\nexport const inputAssunto = {\r\n  gridArea: '2 / 1 / 3 / 3',\r\n}\r\n\r\nexport const inputMensagem = {\r\n  gridArea: '3 / 1 / 5 / 3',\r\n}\r\n\r\nexport const ButtonSendContact = styled.button`\r\n  grid-area: 5 / 1 / 6 / 3;\r\n  background: #00B83B;\r\n  padding: 10px 40px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  border: 1px solid transparent;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: 50px;\r\n  justify-self: center;\r\n  transition: background .15s ease-in-out, box-shadow .15s ease-in-out;\r\n  height: 3.5vw;\r\n  margin-top: 5px;\r\n\r\n  :hover {\r\n    background: #54a3ff;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    height: auto;\r\n    width: 70%;\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport const HrVerde = styled.hr`\r\n  width: 10vw;\r\n  border: none;\r\n  width: 10vw;\r\n  border-bottom: 4px solid #00B83B;\r\n`\r\n","import React, { useCallback, useState } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { useToastAlert } from '../../utils'\r\n\r\nimport {\r\n  Section,\r\n  TitleContact,\r\n  DescriptionContact,\r\n  ContainerFormContact,\r\n  InputContact,\r\n  inputNome,\r\n  inputEmail,\r\n  inputAssunto,\r\n  inputMensagem,\r\n  InputMessage,\r\n  ButtonSendContact,\r\n  HrVerde,\r\n} from './SectionContact.styles'\r\n\r\nconst SectionFAQ = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL\r\n  const { ToastAlert, ToastUpdate } = useToastAlert()\r\n\r\n  const storageData = localStorage.getItem('authToken')\r\n\r\n  const [canSendContact, setCanSendContact] = useState(true)\r\n  const [form, setForm] = useState({\r\n    nome: '',\r\n    email: '',\r\n    assunto: '',\r\n    mensagem: ''\r\n  })\r\n\r\n  const sendContact = useCallback(\r\n    (event) => {\r\n      event.preventDefault()\r\n\r\n      if (canSendContact) {\r\n        setCanSendContact(false)\r\n\r\n        ToastAlert({\r\n          id: 'contact',\r\n          message: 'Enviando contato...',\r\n          type: 'info',\r\n        })\r\n\r\n        axios\r\n          .post(`${ apiUrl }/contato`, {\r\n            contact: form\r\n          }, {\r\n            headers: {\r\n              Authorization: storageData,\r\n            }\r\n          })\r\n          .then(() => {\r\n            ToastUpdate({\r\n              id: 'contact',\r\n              message: 'Contato enviado com sucesso!',\r\n              type: 'success',\r\n              autoClose: 6000,\r\n            })\r\n\r\n            setForm({\r\n              nome: '',\r\n              email: '',\r\n              assunto: '',\r\n              mensagem: ''\r\n            })\r\n\r\n            setTimeout(() => {\r\n              setCanSendContact(true)\r\n            }, 120000)\r\n          })\r\n          .catch((error) => {\r\n            setCanSendContact(true)\r\n\r\n            ToastUpdate({\r\n              id: 'contact',\r\n              message: 'Erro ao enviar o contato, contate um adminstrador.',\r\n              type: 'error',\r\n              autoClose: 6000,\r\n            })\r\n\r\n            ToastAlert({\r\n              message: error?.response?.data?.error?.message ?? 'Erro 404',\r\n              type: 'error',\r\n              autoClose: 6000,\r\n            })\r\n          })\r\n      } else {\r\n        ToastAlert({\r\n          message: 'Você deve esperar 2 minutos para enviar outra mensagem.',\r\n          type: 'info',\r\n          autoClose: 6000,\r\n        })\r\n      }\r\n    },\r\n    [form, canSendContact],\r\n  )\r\n\r\n  return (\r\n    <Section id=\"contato\" data-aos=\"fade-up\">\r\n      <TitleContact>Contato</TitleContact>\r\n      <DescriptionContact>Entre em contato conosco.</DescriptionContact>\r\n\r\n      <HrVerde />\r\n\r\n      <ContainerFormContact onSubmit={ sendContact }>\r\n        <InputContact\r\n          id=\"nome\"\r\n          type=\"text\"\r\n          placeholder=\"Seu nome\"\r\n          required\r\n          style={ inputNome }\r\n          value={ form.nome }\r\n          onChange={ (e) => setForm({ ...form, nome: e.target.value }) }\r\n        />\r\n        <InputContact\r\n          id=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Seu email\"\r\n          required\r\n          style={ inputEmail }\r\n          value={ form.email }\r\n          onChange={ (e) => setForm({ ...form, email: e.target.value }) }\r\n        />\r\n        <InputContact\r\n          id=\"assunto\"\r\n          type=\"text\"\r\n          placeholder=\"Assunto\"\r\n          required\r\n          style={ inputAssunto }\r\n          value={ form.assunto }\r\n          onChange={ (e) => setForm({ ...form, assunto: e.target.value }) }\r\n        />\r\n        <InputMessage\r\n          id=\"mensagem\"\r\n          type=\"textarea\"\r\n          placeholder=\"Mensagem\"\r\n          required\r\n          style={ inputMensagem }\r\n          value={ form.mensagem }\r\n          onChange={ (e) => setForm({ ...form, mensagem: e.target.value }) }\r\n        />\r\n        <ButtonSendContact type=\"submit\">Enviar mensagem</ButtonSendContact>\r\n      </ContainerFormContact>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default SectionFAQ\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerQuestion = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50vw;\r\n\r\n  @media(max-width: 950px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const TitleQuestion = styled.h2`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 1.2rem;\r\n  line-height: 24px;\r\n  font-weight: 600;\r\n  padding-right: 10px;\r\n  transition: all 0.5s;\r\n  color: ${ ({ stateDropdown }) => (stateDropdown ? '#54a3ff' : '#000') };\r\n  cursor: pointer;\r\n  width: 100%;\r\n\r\n  :after {\r\n    font-family: FontAwesome;\r\n    content: \"\\f055\";\r\n    color: ${ ({ stateDropdown }) => (stateDropdown ? '#54a3ff' : '#000') };\r\n    transform: scale(1,1);\r\n    margin-top: 2px;\r\n    margin-left: 10px;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    padding: 0px;\r\n  }\r\n`\r\n\r\nexport const AnswerQuestion = styled.span`\r\n  visibility: ${ ({ stateDropdown }) => (stateDropdown ? 'inherit' : 'hidden') };\r\n  height: ${ ({ stateDropdown }) => (stateDropdown ? '140px' : '0px') };\r\n  transition: height 0.3s;\r\n  cursor: pointer;\r\n\r\n  @media(max-width: 950px) {\r\n    height: ${ ({ stateDropdown }) => (stateDropdown ? '' : '0px') };\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\n\r\nimport {\r\n  ContainerQuestion,\r\n  TitleQuestion,\r\n  AnswerQuestion,\r\n} from './Dropdown.styles'\r\n\r\nconst Dropdown = ({ question, answer }) => {\r\n  const [stateDropdown, setStateDropdown] = useState(false)\r\n\r\n  return (\r\n    <ContainerQuestion>\r\n      <TitleQuestion\r\n        onClick={ () => setStateDropdown(!stateDropdown) }\r\n        stateDropdown={ stateDropdown }\r\n      >\r\n        { question }\r\n      </TitleQuestion>\r\n      <AnswerQuestion\r\n        onClick={ () => setStateDropdown(!stateDropdown) }\r\n        stateDropdown={ stateDropdown }\r\n      >\r\n        { answer }\r\n      </AnswerQuestion>\r\n    </ContainerQuestion>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import styled from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: #f6f7fd;\r\n  padding: 0px 5vw;\r\n  scroll-margin-top: 70px;\r\n  \r\n  @media(max-width: 950px) {\r\n    padding: 0px 10vw;\r\n  }\r\n`\r\n\r\nexport const TitleFAQ = styled.h1`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const ContainerFAQ = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 3vw 0;\r\n`\r\n\r\nexport const HrVerde = styled.hr`\r\n  width: 10vw;\r\n  border: none;\r\n  border-bottom: 4px solid #00B83B;\r\n`\r\n\r\nexport const HrCard = styled.hr`\r\n  width: 100%;\r\n  border: 0;\r\n  border-top: 1px solid rgba(0,0,0,.1);\r\n`\r\n","import React from 'react'\r\n\r\nimport map from 'lodash/map'\r\n\r\nimport Dropdown from '../Dropdown'\r\n\r\nimport {\r\n  ContainerFAQ,\r\n  HrCard,\r\n  HrVerde,\r\n  Section,\r\n  TitleFAQ,\r\n} from './SectionFAQ.styles'\r\n\r\nconst SectionFAQ = () => {\r\n  const questionsFAQ = [\r\n    {\r\n      question: 'Qual linguagem de programação pode ser usada?',\r\n      answer:\r\n        'A linguagem de programação fica por conta da equipe. Não restringimos nenhuma linguagem. É de livre escolha.',\r\n    },\r\n    {\r\n      question: 'Os integrantes precisam ser da mesma instituição?',\r\n      answer: `Não. Os integrantes podem ser de instituições diferentes,\r\n        diferentes idades e diferentes níveis de conhecimento. Podem estar graduando ou ser graduado.\r\n      `,\r\n    },\r\n    {\r\n      question: 'Quantos integrantes pode ter a equipe?',\r\n      answer:\r\n        'A equipe pode ser composta por no mínimo 1 (um) integrante e no máximo 5 (cinco) integrantes.',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Section id=\"faq\" data-aos=\"fade-up\">\r\n      <TitleFAQ>F.A.Q</TitleFAQ>\r\n\r\n      <HrVerde />\r\n\r\n      <ContainerFAQ>\r\n        {map(questionsFAQ, (questionFAQ) => (\r\n          <div key={ questionFAQ.question }>\r\n            <Dropdown\r\n              question={ questionFAQ.question }\r\n              answer={ questionFAQ.answer }\r\n            />\r\n            <HrCard />\r\n          </div>\r\n        ))}\r\n      </ContainerFAQ>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default SectionFAQ\r\n"],"names":["Section","styled","pulseAnimation","keyframes","CardAward","TitleAward","DescriptionAward","HrCard","FirstPlaceAward","MoneyPrize","CardSubscription","TitleSubscription","UlRules","LiRules","HrVerde","GreenSpan","id","src","primeiroLugar","alt","height","width","TitleContact","DescriptionContact","ContainerFormContact","InputContact","InputMessage","inputNome","gridArea","inputEmail","inputAssunto","inputMensagem","ButtonSendContact","useToastAlert","ToastAlert","ToastUpdate","storageData","localStorage","getItem","useState","canSendContact","setCanSendContact","nome","email","assunto","mensagem","form","setForm","sendContact","useCallback","event","preventDefault","message","type","axios","process","contact","headers","Authorization","then","autoClose","setTimeout","catch","error","response","data","onSubmit","placeholder","required","style","value","onChange","e","target","ContainerQuestion","TitleQuestion","stateDropdown","AnswerQuestion","question","answer","setStateDropdown","onClick","TitleFAQ","ContainerFAQ","map","questionFAQ"],"sourceRoot":""}