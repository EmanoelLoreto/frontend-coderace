{"version":3,"file":"static/js/619.c8e05f49.chunk.js","mappings":"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","sources":["forms/schemas/nomeCompleto.validator.js","forms/schemas/cpf.validator.js","forms/schemas/email.validator.js","forms/schemas/subscriptionForm.schema.js","containers/SubscriptionContainer/SubscriptionContainer.styles.js","containers/SubscriptionContainer/SubscriptionContainer.js","screens/SubscriptionScreen/SubscriptionScreen.js","assets/avatars|sync|/^/avatar/-.*/.png$"],"sourcesContent":["// Regex para exigir nome e sobrenome pelo menos\r\nconst regexPattern = /^([a-zA-Z]{2,}\\s[a-zA-Z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)/\r\n\r\nconst nomeCompletoValidator = name => regexPattern.test(name)\r\n\r\nexport default nomeCompletoValidator\r\n","// const validator = require('@fnando/cpf/commonjs')\r\n\r\nimport { isValid } from '@fnando/cpf' // import just one function\r\n\r\nconst cpfValidator = cpf => isValid(cpf)\r\n\r\nexport default cpfValidator\r\n","// Regex para validar email\r\nconst regexPattern = /^[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/\r\n\r\nconst emailValidator = email => regexPattern.test(email)\r\n\r\nexport default emailValidator\r\n","import * as Yup from 'yup'\r\nimport nomeCompletoValidator from './nomeCompleto.validator'\r\nimport cpfValidator from './cpf.validator'\r\nimport emailValidator from './email.validator'\r\n\r\nconst registerFormSchema = () => Yup.object().shape({\r\n  teamName: Yup.string()\r\n    .required('Nome da equipe obrigatório')\r\n    .min(2, 'Deve ser maior que 2 caracteres'),\r\n\r\n  participantsData: Yup.array().of(\r\n    Yup.object().shape({\r\n      nome: Yup.string()\r\n        .required('Nome obrigatório')\r\n        .test('isValidNomeCompleto', 'Deve possuir nome e sobrenome', nomeCompletoValidator),\r\n\r\n      cpf: Yup.string()\r\n        .required('CPF obrigatório')\r\n        .test('isValidCpfOrCnpj', 'Deve ser um CPF válido', cpfValidator)\r\n        .max(14, 'Formato inválido'),\r\n\r\n      email: Yup.string()\r\n        .required('Email obrigatório')\r\n        .test('isValidEmail', 'Deve ser um email válido', emailValidator),\r\n\r\n      telefone: Yup.string()\r\n        .required('Telefone obrigatório')\r\n        .max(15, 'Formato inválido'),\r\n    })\r\n  )\r\n})\r\n\r\nexport default registerFormSchema\r\n","/* eslint-disable no-nested-ternary */\r\nimport styled from 'styled-components'\r\nimport backgroundHome from '../../assets/background-home.jpg'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const SectionHome = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(${ backgroundHome });\r\n  background-attachment: fixed;\r\n  padding-bottom: 25px;\r\n\r\n  :before {\r\n    content: \"\";\r\n    background: rgba(0, 0, 0, 0.8);\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: ${ ({ height }) => (height ? `${ height }px` : 'auto') };\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nexport const ContainerForm = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  grid-column-gap: 0px;\r\n  grid-row-gap: 0px;\r\n  padding: 20px;\r\n\r\n  background-color: #fff;\r\n  width: 80vw;\r\n  border-radius: 20px;\r\n  z-index: 2;\r\n  margin-top: ${ ({ height }) => (height ? `${ height + 20 }px` : '') };\r\n\r\n\r\n  h1 {\r\n    grid-area: 1 / 1 / 2 / 3;\r\n    margin: 0px 0px 10px 0px;\r\n    align-self: center;\r\n    justify-self: center;\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: ${ ({ height }) => (height ? `${ height + 20 }px` : '') };\r\n  }\r\n`\r\n\r\nexport const ContainerTeam = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-self: center;\r\n  grid-area: 2 / 1 / 6 / 3;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  padding: 10px 14px;\r\n  box-shadow: none;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 10px;\r\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n  margin: 5px 0px 10px 0px;\r\n  color: #54a3ff;\r\n  height: 1.5rem;\r\n\r\n  :focus {\r\n    color: #54a3ff;\r\n    background-color: #fff;\r\n    border-color: #00B83B;\r\n    outline: 0;\r\n    box-shadow: 0 0 0 0.1rem rgb(0 123 255 / 25%);\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    width: 90%;\r\n  }\r\n`\r\n\r\nexport const InputDisabled = styled(Input)`\r\n  cursor: not-allowed;\r\n`\r\n\r\nexport const ContainerInputAndLabel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media(max-width: 950px) {\r\n    flex-direction: column !important;\r\n    margin: 0 !important;\r\n  }\r\n`\r\n\r\nexport const LabelError = styled.span`\r\n  color: red;\r\n  font-size: 0.8rem;\r\n  margin: -5px 0px 5px 10px\r\n`\r\n\r\nexport const ContainerParticipants = styled.div`\r\n  grid-area: 2 / 3 / 6 / 6;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  @media(max-width: 950px) {\r\n    width: inherit;\r\n  }\r\n`\r\n\r\nexport const ButtonCreateTeam = styled.input`\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n  color: #fff;\r\n  background: #00B83B;\r\n  padding: 7px 22px;\r\n  border-radius: 50px;\r\n  border: 3px solid #00B83B;\r\n  transition: all ease-in-out 0.3s;\r\n  outline: none;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    color: #00B83B;\r\n    background: none;\r\n  }\r\n`\r\n\r\nexport const GreenSpan = styled.span`\r\n  color: #00B83B;\r\n\r\n  :hover {\r\n    color: #54a3ff;\r\n  }\r\n`\r\n\r\nexport const HeaderParticipants = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  grid-area: 1 / 3 / 2 / 6;\r\n`\r\n\r\nexport const IconParticipant = styled.img`\r\n  width: 5vw;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  border: ${ ({ selected }) => (selected ? '2px solid #54a3ff' : '2px solid transparent') };\r\n  transition: all 0.5s;\r\n  margin: 0px 5px;\r\n\r\n  :hover {\r\n    border: 2px solid #54a3ff;\r\n    transform: scale(1.02);\r\n  }\r\n`\r\n\r\nexport const IconAddParticipant = styled.img`\r\n  cursor: pointer;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-left: 10px;\r\n`\r\n\r\nexport const AvatarAndName = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: all 0.5s;\r\n  color: ${ ({ selected, error }) => (selected && !error ? '#54a3ff' : error ? 'red' : '') };\r\n\r\n  h4 {\r\n    margin: 5px 0px 0px 0px\r\n  }\r\n\r\n  @media(max-width: 950px) {\r\n    margin: 20px 0;\r\n\r\n    img {\r\n      width: 11vw;\r\n    }\r\n\r\n    h4 {\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n`\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Aos from 'aos'\r\nimport 'aos/dist/aos.css'\r\n\r\nimport { useToastAlert, trimMask } from '../../utils'\r\n\r\nimport {\r\n  Formik, FieldArray, ErrorMessage, Form, Field\r\n} from 'formik'\r\n\r\nimport { format as FormatCPF } from '@fnando/cpf'\r\n\r\nimport Header from '../../components/Header'\r\nimport SectionAward from '../../components/SectionAward'\r\nimport SectionFAQ from '../../components/SectionFAQ'\r\nimport SectionContact from '../../components/SectionContact'\r\nimport SectionFooter from '../../components/SectionFooter'\r\nimport Footer from '../../components/Footer'\r\nimport InputMask from 'react-input-mask'\r\n\r\nimport registerFormSchema from '../../forms/schemas/subscriptionForm.schema'\r\n\r\nimport map from 'lodash/map'\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nimport {\r\n  Container,\r\n  SectionHome,\r\n  ContainerForm,\r\n  ContainerTeam,\r\n  ContainerParticipants,\r\n  HeaderParticipants,\r\n  IconParticipant,\r\n  IconAddParticipant,\r\n  Input,\r\n  ContainerInputAndLabel,\r\n  LabelError,\r\n  ButtonCreateTeam,\r\n  AvatarAndName,\r\n} from './SubscriptionContainer.styles'\r\n\r\nconst SubscriptionContainer = () => {\r\n  const { ToastAlert, ToastUpdate } = useToastAlert()\r\n\r\n  const [heightBackgroundImage, setHeightBackgroundImage] = useState('')\r\n  const [heightHeaderMenu, setHeightHeaderMenu] = useState('')\r\n  const [selectedParticipant, setSelectedParticipant] = useState(1)\r\n  const [windowDimensions, setWindowDimensions] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  })\r\n\r\n  const apiUrl = process.env.REACT_APP_API_URL\r\n\r\n  const setDimensions = useCallback(() => {\r\n    setHeightBackgroundImage(\r\n      document.getElementById('section-home')\r\n        ? document.getElementById('section-home').getBoundingClientRect().height\r\n        : ''\r\n    )\r\n\r\n    setWindowDimensions({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setDimensions()\r\n    }, 300)\r\n  }, [document, window])\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('resize', () => {\r\n        setDimensions()\r\n      }, true)\r\n\r\n      setHeightHeaderMenu(\r\n        document.getElementById('header-coderace')\r\n          ? document.getElementById('header-coderace').getBoundingClientRect().height\r\n          : ''\r\n      )\r\n\r\n      setTimeout(() => {\r\n        setDimensions()\r\n      }, 300)\r\n    }\r\n\r\n    Aos.init({ duration: 1500 })\r\n  }, [document, window])\r\n\r\n  const initialValues = {\r\n    teamName: '',\r\n    dataInscricao: new Date().toLocaleDateString('pt-BR'),\r\n    participantsData: [\r\n      {\r\n        nome: '',\r\n        cpf: '',\r\n        email: '',\r\n        telefone: '',\r\n        instituicao: '',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const addParticipant = useCallback((values, setValues) => {\r\n    setValues({\r\n      ...values,\r\n      participantsData: [\r\n        ...values.participantsData,\r\n        {\r\n          nome: '',\r\n          cpf: '',\r\n          email: '',\r\n          telefone: '',\r\n          instituicao: '',\r\n        },\r\n      ],\r\n    })\r\n  }, [])\r\n\r\n  const removeParticipant = useCallback((values, setValues) => {\r\n    setValues({\r\n      ...values,\r\n      participantsData: values.participantsData.slice(0, -1),\r\n    })\r\n  }, [])\r\n\r\n  const selectedParticipantIndex = useCallback(\r\n    (values) => (selectedParticipant > values.participantsData.length\r\n      ? values.participantsData.length\r\n      : selectedParticipant),\r\n    [selectedParticipant]\r\n  )\r\n\r\n  const onSubmitSubscription = useCallback(\r\n    (data, formik) => {\r\n      ToastAlert({\r\n        id: 'creating-team',\r\n        message: 'Criando time...',\r\n        type: 'info',\r\n      })\r\n\r\n      const participantsData = map(data.participantsData, (participant) => ({\r\n        ...participant,\r\n        cpf: trimMask(participant.cpf),\r\n        telefone: trimMask(participant.telefone),\r\n      }))\r\n\r\n      axios\r\n        .post(`${ apiUrl }/inscricao`, {\r\n          teamData: {\r\n            nome: data.teamName,\r\n            dataInscricao: data.dataInscricao,\r\n          },\r\n          participantsData,\r\n        })\r\n        .then(() => {\r\n          formik.resetForm()\r\n          ToastUpdate({\r\n            id: 'creating-team',\r\n            message: 'Time criado com sucesso!',\r\n            type: 'success',\r\n            autoClose: 6000,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          ToastUpdate({\r\n            id: 'creating-team',\r\n            message: 'Erro ao criar o time.',\r\n            type: 'error',\r\n            autoClose: 6000,\r\n          })\r\n\r\n          ToastAlert({\r\n            message: error?.response?.data?.error?.message ?? 'Erro interno, contate um adminstrador.',\r\n            type: 'warning',\r\n            autoClose: 6000,\r\n          })\r\n        })\r\n    },\r\n    [apiUrl]\r\n  )\r\n\r\n  const InputFormik = useCallback(\r\n    ({ field, form, ...props }) => <Input { ...field } { ...props } />,\r\n    [Input]\r\n  )\r\n\r\n  const playerName = useCallback(\r\n    (participant, index) => (participant.nome !== ''\r\n      ? participant.nome.split(' ')[0]\r\n      : `Player ${ index + 1 }`),\r\n    []\r\n  )\r\n\r\n  const hasErrorPlayer = useCallback(\r\n    (errors, touched, index) => !isEmpty(errors)\r\n      && !isEmpty(touched)\r\n      && !isEmpty(errors?.participantsData)\r\n      && !isEmpty(touched?.participantsData)\r\n      && !isEmpty(errors?.participantsData[index])\r\n      && !isEmpty(touched?.participantsData[index])\r\n      && ((errors.participantsData[index].nome\r\n        && touched.participantsData[index].nome)\r\n        || (errors.participantsData[index].cpf\r\n          && touched.participantsData[index].cpf)\r\n        || (errors.participantsData[index].email\r\n          && touched.participantsData[index].email)\r\n        || (errors.participantsData[index].telefone\r\n          && touched.participantsData[index].telefone)),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <SectionHome id=\"section-home\" height={ heightBackgroundImage }>\r\n        <Formik\r\n          onSubmit={ onSubmitSubscription }\r\n          validationSchema={ registerFormSchema }\r\n          initialValues={ initialValues }\r\n        >\r\n          {({\r\n            values, setValues, errors, touched, handleChange, handleBlur\r\n          }) => (\r\n            <Form style={ { zIndex: 2 } }>\r\n              <ContainerForm height={ heightHeaderMenu }>\r\n                <h1>Monte seu time</h1>\r\n                <ContainerTeam>\r\n                  <ContainerInputAndLabel>\r\n                    <span>Escolha um nome para seu time:</span>\r\n                    <Field\r\n                      name=\"teamName\"\r\n                      type=\"text\"\r\n                      component={ InputFormik }\r\n                      placeholder=\"Nome para a equipe\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"teamName\"\r\n                      component={ LabelError }\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </ContainerInputAndLabel>\r\n\r\n                  <ContainerInputAndLabel>\r\n                    <span>Data da inscrição:</span>\r\n                    <Field\r\n                      name=\"dataInscricao\"\r\n                      type=\"text\"\r\n                      component={ InputFormik }\r\n                      disabled\r\n                    />\r\n                  </ContainerInputAndLabel>\r\n\r\n                  {windowDimensions.width > 950 && (\r\n                    <ButtonCreateTeam type=\"submit\" value=\"Criar time\" />\r\n                  )}\r\n                </ContainerTeam>\r\n                <HeaderParticipants>\r\n                  {map(values.participantsData, (participant, index) => (\r\n                    <AvatarAndName\r\n                      key={ participant + index }\r\n                      selected={ selectedParticipantIndex(values) === index + 1 }\r\n                      error={ hasErrorPlayer(errors, touched, index) }\r\n                    >\r\n                      <IconParticipant\r\n                        src={ require(`../../assets/avatars/avatar-${ index }.png`) }\r\n                        alt=\"avatar\"\r\n                        onClick={ () => setSelectedParticipant(index + 1) }\r\n                        selected={\r\n                          selectedParticipantIndex(values) === index + 1\r\n                        }\r\n                      />\r\n                      <h4>{playerName(participant, index)}</h4>\r\n                    </AvatarAndName>\r\n                  ))}\r\n                  {values.participantsData.length < 5 && (\r\n                  <IconAddParticipant\r\n                    src={ require('../../assets/botao-adicionar.png') }\r\n                    alt=\"botao-add\"\r\n                    onClick={ () => addParticipant(values, setValues) }\r\n                    style={ { width: '36px', height: '36px' } }\r\n                  />\r\n                  )}\r\n                  {values.participantsData.length > 1 && (\r\n                  <IconAddParticipant\r\n                    src={ require('../../assets/botao-remover.png') }\r\n                    alt=\"botao-remove\"\r\n                    onClick={ () => removeParticipant(values, setValues) }\r\n                  />\r\n                  )}\r\n                </HeaderParticipants>\r\n                <FieldArray name=\"participantsData\">\r\n                  {() => map(values?.participantsData, (participantInitialValue, index) => (\r\n                    <ContainerParticipants\r\n                      key={ index }\r\n                      style={ {\r\n                        display:\r\n                          selectedParticipantIndex(values) === index + 1\r\n                            ? 'grid'\r\n                            : 'none',\r\n                      } }\r\n                    >\r\n                      <ContainerInputAndLabel>\r\n                        <span>Nome:</span>\r\n                        <Field\r\n                          name={ `participantsData.${ index }.nome` }\r\n                          type=\"text\"\r\n                          component={ InputFormik }\r\n                          placeholder=\"Seu nome\"\r\n                          value={ participantInitialValue.nome }\r\n                        />\r\n                        <ErrorMessage\r\n                          name={ `participantsData.${ index }.nome` }\r\n                          component={ LabelError }\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </ContainerInputAndLabel>\r\n\r\n                      <ContainerInputAndLabel\r\n                        style={ {\r\n                          flexDirection: 'row',\r\n                          justifyContent: 'space-between',\r\n                        } }\r\n                      >\r\n                        <ContainerInputAndLabel\r\n                          style={ { flex: '1', marginRight: '15px' } }\r\n                        >\r\n                          <span>CPF:</span>\r\n                          <Field\r\n                            name={ `participantsData.${ index }.cpf` }\r\n                            type=\"text\"\r\n                            component={ InputFormik }\r\n                            value={ FormatCPF(participantInitialValue.cpf) }\r\n                            placeholder=\"CPF\"\r\n                          />\r\n                          <ErrorMessage\r\n                            name={ `participantsData.${ index }.cpf` }\r\n                            component={ LabelError }\r\n                            className=\"invalid-feedback\"\r\n                          />\r\n                        </ContainerInputAndLabel>\r\n\r\n                        <ContainerInputAndLabel\r\n                          style={ { flex: '1', marginLeft: '15px' } }\r\n                        >\r\n                          <span>Telefone:</span>\r\n                          <InputMask\r\n                            mask=\"(99) 99999-9999\"\r\n                            onChange={ handleChange }\r\n                            onBlur={ handleBlur }\r\n                            value={ values.participantsData[index].telefone }\r\n                          >\r\n                            {(inputProps) => (\r\n                              <Field\r\n                                { ...inputProps }\r\n                                name={ `participantsData.${ index }.telefone` }\r\n                                id={ `participantsData.${ index }.telefone` }\r\n                                type=\"text\"\r\n                                component={ InputFormik }\r\n                                placeholder=\"(00) 00000-0000\"\r\n                              />\r\n                            )}\r\n                          </InputMask>\r\n                          <ErrorMessage\r\n                            name={ `participantsData.${ index }.telefone` }\r\n                            component={ LabelError }\r\n                            className=\"invalid-feedback\"\r\n                          />\r\n                        </ContainerInputAndLabel>\r\n                      </ContainerInputAndLabel>\r\n\r\n                      <ContainerInputAndLabel>\r\n                        <span>E-mail:</span>\r\n                        <Field\r\n                          name={ `participantsData.${ index }.email` }\r\n                          type=\"text\"\r\n                          component={ InputFormik }\r\n                          placeholder=\"E-mail\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name={ `participantsData.${ index }.email` }\r\n                          component={ LabelError }\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </ContainerInputAndLabel>\r\n\r\n                      <ContainerInputAndLabel>\r\n                        <span>Instituição onde estuda/estudou:</span>\r\n                        <Field\r\n                          name={ `participantsData.${ index }.instituicao` }\r\n                          type=\"text\"\r\n                          component={ InputFormik }\r\n                          placeholder=\"Instituição\"\r\n                        />\r\n                      </ContainerInputAndLabel>\r\n                    </ContainerParticipants>\r\n                  )\r\n                  )}\r\n                </FieldArray>\r\n                {windowDimensions.width <= 950 && (\r\n                <ButtonCreateTeam type=\"submit\" value=\"Criar time\" />\r\n                )}\r\n              </ContainerForm>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </SectionHome>\r\n\r\n      <SectionAward />\r\n\r\n      <SectionFAQ />\r\n\r\n      <SectionContact />\r\n\r\n      <SectionFooter />\r\n\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\nexport default SubscriptionContainer\r\n","import React from 'react'\r\nimport SubscriptionContainer from '../../containers/SubscriptionContainer'\r\n\r\nconst SubscriptionScreen = props => <SubscriptionContainer { ...props } />\r\n\r\nexport default SubscriptionScreen\r\n","var map = {\n\t\"./avatar-0.png\": 5627,\n\t\"./avatar-1.png\": 6104,\n\t\"./avatar-2.png\": 6909,\n\t\"./avatar-3.png\": 1470,\n\t\"./avatar-4.png\": 1035\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6718;"],"names":["regexPattern","name","test","cpf","isValid","email","Yup","shape","teamName","required","min","participantsData","of","nome","nomeCompletoValidator","cpfValidator","max","emailValidator","telefone","Container","styled","SectionHome","backgroundHome","height","ContainerForm","ContainerTeam","Input","ContainerInputAndLabel","LabelError","ContainerParticipants","ButtonCreateTeam","HeaderParticipants","IconParticipant","selected","IconAddParticipant","AvatarAndName","error","useToastAlert","ToastAlert","ToastUpdate","useState","heightBackgroundImage","setHeightBackgroundImage","heightHeaderMenu","setHeightHeaderMenu","selectedParticipant","setSelectedParticipant","width","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","apiUrl","process","setDimensions","useCallback","document","getElementById","getBoundingClientRect","setTimeout","useEffect","addEventListener","Aos","duration","initialValues","dataInscricao","Date","toLocaleDateString","instituicao","addParticipant","values","setValues","removeParticipant","slice","selectedParticipantIndex","length","onSubmitSubscription","data","formik","id","message","type","map","participant","trimMask","axios","teamData","then","resetForm","autoClose","catch","response","InputFormik","field","props","form","playerName","index","split","hasErrorPlayer","errors","touched","isEmpty","Header","onSubmit","validationSchema","registerFormSchema","handleChange","handleBlur","style","zIndex","component","placeholder","className","disabled","value","src","require","alt","onClick","participantInitialValue","display","flexDirection","justifyContent","flex","marginRight","FormatCPF","marginLeft","mask","onChange","onBlur","inputProps","SectionAward","SectionFAQ","SectionContact","SectionFooter","Footer","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}